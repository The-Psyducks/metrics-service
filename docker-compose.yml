services:
  service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ./server/.env
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      rabbitmq:
        condition: service_healthy
  
  postgres:
    image: postgres:16.4-alpine3.20
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d metrics_db" ]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"
    env_file:
      - ./database/.env
    volumes:
      - ./database/postgres:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.9.10-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123